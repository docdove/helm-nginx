replicaCount: 1

image:
  repository: nginx
  tag: "latest"
  pullPolicy: IfNotPresent

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
  hosts:
    - host: "example.local"
      paths:
        - "/"
  tls: []

resources:
  limits:
    cpu: "100m"
    memory: "128Mi"
  requests:
    cpu: "100m"
    memory: "128Mi"

nodeSelector: {}
tolerations: []
affinity: {}

serviceAccount:
  create: true
  name: ""  # Оставьте пустым, если хотите, чтобы имя создавалось автоматически

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80

appsettingsFileName: "appsettings.docker.json"

appSettingsDev:
  PostgresOptions:
    ConnectionString: "Host=10.101.47.15:5432;Database=;User ID=usersql;Password=;"
    EodDataScheme: "tariffs_db"
  Dicts:
    FI_Api: "http://localhost:5000/"
  Serilog:
    MinimumLevel:
      Default: "Debug"
      Override:
        Microsoft: "Information"
        System: "Information"
    Filter:
      - Name: "ByExcluding"
        Args:
          expression: "EndsWith(SourceContext, 'DefaultHttpClientFactory')"
    WriteTo:
      - Name: "Console"
        Args:
          outputTemplate: "[{Timestamp:HH:mm:ss} {Level:u3}] ({SourceContext}) {Message:lj}{NewLine}{Exception}"
          restrictedToMinimumLevel: "Information"
    Enrich:
      - "FromLogContext"
